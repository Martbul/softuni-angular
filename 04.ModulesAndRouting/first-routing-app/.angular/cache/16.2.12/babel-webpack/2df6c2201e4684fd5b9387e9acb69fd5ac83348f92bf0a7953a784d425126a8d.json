{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthGuard {\n  canActivate(route, state) {\n    return this.checkIfLogged(state.url);\n  }\n  checkIfLogged(url) {\n    return false;\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","canActivate","route","state","checkIfLogged","url","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Documents\\GitHub\\softuni-angular\\04.ModulesAndRouting\\first-routing-app\\src\\app\\user\\user-detail.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class AuthGuard implements CanActivate{\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        return this.checkIfLogged(state.url)\r\n    }\r\n\r\n    checkIfLogged(url:string):boolean{\r\n        return false\r\n    }\r\n}"],"mappings":";AAOA,OAAM,MAAOA,SAAS;EAClBC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACjE,OAAO,IAAI,CAACC,aAAa,CAACD,KAAK,CAACE,GAAG,CAAC;EACxC;EAEAD,aAAaA,CAACC,GAAU;IACpB,OAAO,KAAK;EAChB;EAAC,QAAAC,CAAA,G;qBAPQN,SAAS;EAAA;EAAA,QAAAO,EAAA,G;WAATP,SAAS;IAAAQ,OAAA,EAATR,SAAS,CAAAS,IAAA;IAAAC,UAAA,EAFP;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}